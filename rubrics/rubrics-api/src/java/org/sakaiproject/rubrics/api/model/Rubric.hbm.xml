<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping
    PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="false" >
	<class name="org.sakaiproject.rubrics.api.rubric.Rubric" table="RUBRIC_T">
		<id name="rubricId" column="RUBRIC_ID" type="long">
			<generator class="native">
				<param name="sequence">RUBRIC_S</param>
			</generator>
		</id>

		<property name="version" type="integer">
			<column name="VERSION" not-null="false" />
		</property>
		<property name="title" type="java.lang.String">
			<column name="TITLE" not-null="true" length="255" />
		</property>
		<property name="titleKey" type="java.lang.String">
			<column name="TITLE_KEY" not-null="false" length="50" />
		</property>
		<property name="template" type="boolean">
			<column name="TEMPLATE" not-null="true" />
		</property>
		<property name="description" type="java.lang.String">
			<column name="DESCRIPTION" not-null="false" />
		</property>
		<property name="createdBy" type="java.lang.String">
			<column name="CREATED_BY" not-null="true" />
		</property>
		<property name="createdDate" type="java.util.Date">
			<column name="CREATED_DATE" not-null="true" />
		</property>
		<property name="modifiedBy" type="java.lang.String">
			<column name="MODIFIED_BY" not-null="false" />
		</property>
		<property name="ModifiedDate" type="java.util.Date">
			<column name="MODIFIED_DATE" not-null="false" />
		</property>
		<property name="icon" type="java.lang.String">
			<column name="ICON" not-null="false" />
		</property>
		<property name="removed" type="boolean">
			<column name="REMOVED" not-null="false" />
		</property>
		<property name="dataSet" type="java.lang.String">
			<column name="DATA_SET" not-null="false" length="6000" />
		</property>
		<set name="rubricRowSet" table="RUBRIC_ROW_T" cascade="none"
			inverse="true" order-by="SEQUENCE asc">
			<key column="RUBRIC_ID" />
			<one-to-many class="org.sakaiproject.rubrics.api.rubric.RubricRow" />
		</set>
	</class>

	<query name="getPredefinedRubrics">
    <![CDATA[from org.sakaiproject.rubrics.api.rubric.Rubric rubric
             left join fetch rubric.rubricRowSet row
             left join fetch row.cellSet cell
             where rubric.template is true and rubric.removed is false
             and row.removed is false
             and (rubric.createdBy='master' or rubric.createdBy = :userId)
             order by LENGTH(rubric.titleKey), rubric.titleKey]]>
	</query>

	<query name="getRubricsById">
   	<![CDATA[from org.sakaiproject.rubrics.api.rubric.Rubric rubric
             left join fetch rubric.rubricRowSet row
             left join fetch row.cellSet cell
             where rubric.id = :rubricId and
             row.removed is false]]>
	</query>
	
	<query name="getRubricByItemId">
   	<![CDATA[from org.sakaiproject.rubrics.api.rubric.Rubric rubric
             left join fetch rubric.rubricRowSet row
             left join fetch row.cellSet cell,
             org.sakaiproject.rubrics.api.rubric.RubricMappedItem map
             where map.id.itemId = :itemId and map.id.toolId = :toolId and 
             rubric.id = map.rubricId and row.removed is false]]>
	</query>
	
	<query name="getRubricIdByItemId">
   	<![CDATA[select rubric.id from org.sakaiproject.rubrics.api.rubric.Rubric rubric,
             org.sakaiproject.rubrics.api.rubric.RubricMappedItem map
             where map.id.itemId = :itemId and map.id.toolId = :toolId and 
             rubric.id = map.rubricId]]>
	</query>
	
	<query name="getMappedItemById">
   	<![CDATA[from org.sakaiproject.rubrics.api.rubric.RubricMappedItem map
             where map.id.itemId = :itemId and map.id.toolId = :toolId]]>
	</query>
	

</hibernate-mapping>
       